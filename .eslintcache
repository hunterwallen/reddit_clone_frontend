<<<<<<< HEAD
[{"/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/App.js":"1","/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/components/UpAndDownVote.js":"2","/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/reportWebVitals.js":"3","/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/components/EditPost.js":"4","/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/index.js":"5","/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/components/NewPost.js":"6"},{"size":11249,"mtime":1612290194370,"results":"7","hashOfConfig":"8"},{"size":1794,"mtime":1612281938340,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611850838153,"results":"10","hashOfConfig":"8"},{"size":1493,"mtime":1612208208249,"results":"11","hashOfConfig":"8"},{"size":523,"mtime":1612221304905,"results":"12","hashOfConfig":"8"},{"size":1104,"mtime":1612291032707,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1waz3ro",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/App.js",["28","29"],"import React, { Component } from 'react'\nimport Post from './components/Post'\nimport NewUser from './components/NewUser'\nimport Login from './components/Login'\nimport CreateSub from './components/CreateSub'\nimport ExploreSubs from './components/ExploreSubs'\nimport ShowSub from './components/ShowSub'\nimport Sidebar from './components/Sidebar'\nimport MainFeed from './components/MainFeed'\nimport axios from 'axios'\n\nclass App extends Component {\n  state = {\n    posts: [],\n    currentUser: {},\n    subreddits: [],\n    viewingSub: \"\"\n  }\n\n  componentDidMount = () => {\n    this.getPosts()\n    this.getSubreddits()\n  }\n\n  getPosts = () => {\n    axios.get('https://reddit-two-point-oh.herokuapp.com/posts').then((response) => {\n        this.setState({\n          posts: response.data,\n          currentUser: this.state.currentUser,\n          subreddits: this.state.subreddits,\n          viewingSub: this.state.viewingSub\n        })\n    })\n  }\n\n  getSubreddits = () => {\n    axios.get('https://reddit-two-point-oh.herokuapp.com/subreddits').then((response) => {\n      this.setState({\n        posts: this.state.posts,\n        currentUser: this.state.currentUser,\n        subreddits: response.data.reverse(),\n        viewingSub: this.state.viewingSub\n      })\n    })\n  }\n\n  deletePost = (id) => {\n    axios.delete('https://reddit-two-point-oh.herokuapp.com/posts/' + id).then((response) => {\n      this.getPosts()\n    })\n  }\n\n  handleSubmit = (info) => {\n    info.author = this.state.currentUser.username\n    info.user_id = Number(this.state.currentUser.user_id)\n    info.subreddit_id = Number(this.state.viewingSub)\n    console.log(info);\n    axios.post('https://reddit-two-point-oh.herokuapp.com/posts', info).then((response) => {\n      this.getPosts()\n    })\n  }\n\n  handleEdit = (info, postId) => {\n    axios.put('https://reddit-two-point-oh.herokuapp.com/posts/' + postId, info).then((response) => {\n      this.getPosts()\n    })\n  }\n\n\n  createUser = (info) => {\n    axios.post('https://reddit-two-point-oh.herokuapp.com/accounts', info).then((response) => {\n      this.setState({\n        posts: this.state.posts,\n        currentUser: response.data,\n        subreddits: this.state.subreddits,\n        viewingSub: \"\"\n      })\n    })\n  }\n\n  submitLogin = (creds) => {\n    console.log(creds);\n    axios.post('https://reddit-two-point-oh.herokuapp.com/accounts/login', creds).then((response) => {\n      console.log(response);\n      if(response.data.username) {\n        this.setState({\n          posts: this.state.posts,\n          currentUser: response.data,\n          subreddits: this.state.subreddits,\n          viewingSub: \"\"\n        })\n        document.querySelector('#loginNavButton').style.display = \"none\"\n        document.querySelector('#createNavButton').style.display = \"none\"\n        document.querySelector('#logged-in').style.display = \"flex\"\n        document.querySelector('#loginDiv').style.display = \"none\"\n        setTimeout(()=> {document.querySelector('#login_failed').style.display = \"none\"}, 1002)\n\n      } else {\n        this.setState({\n          posts: this.state.posts,\n          currentUser: {},\n          subreddits: this.state.subreddits,\n          viewingSub: \"\"\n        })\n      }\n    })\n  }\n\n  createSub = (info) => {\n    info.created_by = this.state.currentUser.user_id\n    axios.post(\"https://reddit-two-point-oh.herokuapp.com/subreddits\", info).then((response) => {\n      this.getSubreddits()\n    })\n  }\n\n\n  joinSub = (subInfo) => {\n    axios.put(\"https://reddit-two-point-oh.herokuapp.com/followsub\", subInfo).then((response) => {\n    })\n    axios.put(\"https://reddit-two-point-oh.herokuapp.com/addsub\", subInfo).then((response) => {\n      this.getSubreddits()\n    })\n  }\n\n  leaveSub = (subInfo) => {\n    axios.put(\"https://reddit-two-point-oh.herokuapp.com/unfollowsub\", subInfo).then((response) => {\n    })\n    axios.put(\"https://reddit-two-point-oh.herokuapp.com/leavesub\", subInfo).then((response) => {\n      this.getSubreddits()\n    })\n  }\n\n\n  upvote = (post_id) => {\n    let postId = {\n      post_id: post_id\n    }\n    axios.put(\"https://reddit-two-point-oh.herokuapp.com/upvote\", postId).then((response) => {\n    })\n    let info = {\n      user_id: this.state.currentUser.user_id,\n      post_id: post_id\n    }\n    axios.put(\"https://reddit-two-point-oh.herokuapp.com/react\", info).then((response) => {\n      this.getPosts()\n      this.setState({\n        posts: this.state.posts,\n        currentUser: response.data,\n        subreddits: this.state.subreddits,\n        viewingSub: this.state.viewingSub\n      })\n    })\n  }\n\n  downvote = (post_id) => {\n    let postId = {\n      post_id: post_id\n    }\n    axios.put(\"https://reddit-two-point-oh.herokuapp.com/downvote\", postId).then((response) => {\n    })\n    let info = {\n      user_id: this.state.currentUser.user_id,\n      post_id: post_id\n    }\n    axios.put(\"https://reddit-two-point-oh.herokuapp.com/react\", info).then((response) => {\n      this.getPosts()\n      this.setState({\n        posts: this.state.posts,\n        currentUser: response.data,\n        subreddits: this.state.subreddits,\n        viewingSub: this.state.viewingSub\n      })\n    })\n  }\n\n\n\n  showSubreddit = (id) => {\n    let subId = id\n    console.log(subId);\n      this.setState({\n        posts: this.state.posts,\n        currentUser: this.state.currentUser,\n        subreddits: this.state.subreddits,\n        viewingSub: subId\n      })\n      document.querySelector('#showSub').style.display = \"flex\"\n      document.querySelector('#exploreSubs').style.display = \"none\"\n      document.querySelector('#post-scroll').style.display = 'none'\n  }\n\n  logout = () => {\n    document.querySelector('#loginNavButton').style.display = \"flex\"\n    document.querySelector('#createNavButton').style.display = \"flex\"\n    document.querySelector('#logged-in').style.display = \"none\"\n    document.querySelector('#newSubDiv').style.display = \"none\"\n    document.querySelector('#post-scroll').style.display = 'flex'\n    this.setState({\n      posts: this.state.posts,\n      currentUser: {},\n      subreddits: this.state.subreddits,\n      viewingSub: \"\"\n    })\n  }\n\n  toggleAuthDivs = () => {\n    if(document.querySelector('#loginDiv').style.display === \"none\") {\n      document.querySelector('#loginDiv').style.display = \"flex\"\n      document.querySelector('#newUserDiv').style.display = \"none\"\n    } else {\n      document.querySelector('#loginDiv').style.display = \"none\"\n      document.querySelector('#newUserDiv').style.display = \"flex\"\n    }\n  }\n\n  showLogin = () => {\n    let loginDiv = document.querySelector('#loginDiv').style.display\n    if(loginDiv === \"none\") {\n      document.querySelector('#loginDiv').style.display = \"flex\"\n      document.querySelector('#newUserDiv').style.display = \"none\"\n    } else {\n      document.querySelector('#loginDiv').style.display = \"none\"\n      document.querySelector('#newUserDiv').style.display = \"none\"\n    }\n  }\n\n  showCreate = () => {\n    let createDiv = document.querySelector('#newUserDiv').style.display\n    if( createDiv === \"none\"){\n      document.querySelector('#loginDiv').style.display = \"none\"\n      document.querySelector('#newUserDiv').style.display = \"flex\"\n    } else {\n      document.querySelector('#loginDiv').style.display = \"none\"\n      document.querySelector('#newUserDiv').style.display = \"none\"\n    }\n  }\n\n  toggleNewSub = () => {\n    let newSubDiv = document.querySelector('#newSubDiv')\n    if(newSubDiv.style.display === \"none\") {\n      document.querySelector('#newSubDiv').style.display = \"flex\"\n    } else {\n      document.querySelector('#newSubDiv').style.display = \"none\"\n    }\n  }\n\n  exploreSubs = () => {\n    let exploreSubs = document.querySelector('#exploreSubs')\n    if(exploreSubs.style.display === \"none\") {\n        document.querySelector('#newSubDiv').style.display = 'none'\n        document.querySelector('#showSub').style.display = 'none'\n        document.querySelector('#post-scroll').style.display = 'none'\n        document.querySelector('#exploreSubs').style.display = 'flex'\n\n      } else {\n          document.querySelector('#post-scroll').style.display = 'flex'\n        document.querySelector('#exploreSubs').style.display = 'none'\n      }\n  }\n\n  goHome = () => {\n\n      document.querySelector('#newSubDiv').style.display = 'none'\n      document.querySelector('#loginDiv').style.display = \"none\"\n      document.querySelector('#newUserDiv').style.display = \"none\"\n      document.querySelector('#exploreSubs').style.display = 'none'\n      document.querySelector('#showSub').style.display = \"none\"\n      document.querySelector('#post-scroll').style.display = 'flex'\n      this.setState({\n        posts: this.state.posts,\n        currentUser: this.state.currentUser,\n        subreddits: this.state.subreddits,\n        viewingSub: \"\"\n      })\n  }\n\n  render = () => {\n    return (\n      <div>\n        <div id=\"nav\">\n\n          <div id=\"logo\" onClick={this.goHome}>\n            <img src=\"https://ps.w.org/wp-avatar/assets/icon-256x256.png?rev=1787902\" id=\"reddit-icon\"/>\n              <h1>reddit 2.0</h1>\n          </div>\n\n          <div id=\"nav-commands\">\n\n              {/* NOT LOGGED IN */}\n              <div id=\"not-logged-in\">\n                <h3 onClick={this.showLogin} id=\"loginNavButton\">Login</h3>\n                <h3 onClick={this.showCreate} id=\"createNavButton\">Create Account</h3>\n                <h3 onClick={this.exploreSubs} id=\"exploreSubRedditsButton\">Explore SubReddits</h3>\n              </div>\n\n              {/* LOGGED IN */}\n              <div id=\"logged-in\" style={{display:\"none\"}}>\n                <h3 onClick={this.toggleNewSub} id=\"newSubNavButton\">Create New SubReddit 2.0</h3>\n\n                <h3 onClick={this.logout} id=\"logoutNavButton\">\n                  Log Out</h3>\n              </div>\n\n            </div>\n\n        </div>\n\n        <div id=\"flex-container\">\n          <div id=\"loginDiv\" style={{display:\"none\"}}>\n            <Login submitLogin={this.submitLogin} currentUser={this.state.currentUser} toggleAuthDivs={this.toggleAuthDivs} />\n          </div>\n          <div id=\"newUserDiv\" style={{display:\"none\"}}>\n            <NewUser createUser={this.createUser} toggleAuthDivs={this.toggleAuthDivs} />\n          </div>\n           <div id=\"newSubDiv\" style={{display:\"none\"}}>\n            <CreateSub createSub={this.createSub} />\n          </div>\n\n\n\n\n          <div id=\"exploreSubs\" style={{display:\"none\"}}>\n            <ExploreSubs appState={this.state} showSubreddit={this.showSubreddit}/>\n          </div>\n          <div id=\"showSub\" style={{display:\"none\"}}>\n            <ShowSub posts={this.state.posts} deletePost={this.deletePost} handleSubmit={this.handleSubmit} handleEdit={this.handleEdit} currentUser={this.state.currentUser}\n            appState={this.state} joinSub={this.joinSub} leaveSub={this.leaveSub} upVote={this.upvote} downVote={this.downvote} />\n\n          </div>\n\n          <div id=\"post-scroll\">\n            <MainFeed appState={this.state} currentUser={this.state.currentUser} upVote={this.upvote} downVote={this.downvote} />\n          </div>\n\n          <div id=\"sidebar\">\n            <Sidebar\n              appState={this.state}\n              showSubreddit={this.showSubreddit}\n            />\n          </div>\n\n        </div>\n\n        </div>\n    );\n  }\n}\nexport default App;\n","/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/components/UpAndDownVote.js",["30","31","32","33"],"import React, { Component } from 'react'\n\n\nclass UpAndDownVote extends Component {\n\n  upVote = () => {\n    this.props.upVote(this.props.post_id)\n  }\n\n  downVote = () => {\n    this.props.downVote(this.props.post_id)\n  }\n\n\n  render = () => {\n    return (\n      <div>\n\n        {this.props.currentUser.username ?\n          (this.props.currentUser.post_reaction_id === null ?\n            <div>\n              <div className=\"upVoteDiv\">\n                <img src=\"https://i.imgur.com/FGPc6SG.png\" onClick={this.upVote} />\n              </div>\n              <div className=\"voteCount\">\n                <h3>{this.props.votes} Votes</h3>\n              </div>\n              <div className=\"upVoteDiv\">\n                <img src=\"https://i.imgur.com/4orOVpv.png\" onClick={this.downVote} />\n              </div>\n            </div>\n\n\n          :\n          (this.props.currentUser.post_reaction_id.includes(this.props.post_id) ?\n                  <div className=\"voteCount\">\n                    <h3>{this.props.votes} Votes</h3>\n                  </div>\n\n                :\n                  <div>\n                    <div className=\"upVoteDiv\">\n                      <img src=\"https://i.imgur.com/FGPc6SG.png\" onClick={this.upVote} />\n                    </div>\n                    <div className=\"voteCount\">\n                      <h3>{this.props.votes} Votes</h3>\n                    </div>\n                    <div className=\"upVoteDiv\">\n                      <img src=\"https://i.imgur.com/4orOVpv.png\" onClick={this.downVote} />\n                    </div>\n                  </div>\n\n                  )\n              )\n\n        :\n\n            <div className=\"voteCount\">\n              <h3>{this.props.votes} Votes</h3>\n            </div>\n          }\n\n      </div>\n    )\n  }\n\n}\n\nexport default UpAndDownVote\n","/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/reportWebVitals.js",[],"/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/components/EditPost.js",[],"/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/index.js",[],"/home/evanepperson/dev/reddit_clone/reddit_clone_frontend/src/components/NewPost.js",[],{"ruleId":"34","severity":1,"message":"35","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":12},{"ruleId":"38","severity":1,"message":"39","line":283,"column":13,"nodeType":"40","endLine":283,"endColumn":105},{"ruleId":"38","severity":1,"message":"39","line":23,"column":17,"nodeType":"40","endLine":23,"endColumn":84},{"ruleId":"38","severity":1,"message":"39","line":29,"column":17,"nodeType":"40","endLine":29,"endColumn":86},{"ruleId":"38","severity":1,"message":"39","line":43,"column":23,"nodeType":"40","endLine":43,"endColumn":90},{"ruleId":"38","severity":1,"message":"39","line":49,"column":23,"nodeType":"40","endLine":49,"endColumn":92},"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]
=======
[{"/Users/kimblanck/kb-dev/reddit_clone/reddit_clone_frontend/src/App.js":"1","/Users/kimblanck/kb-dev/reddit_clone/reddit_clone_frontend/src/components/MainFeed.js":"2"},{"size":11249,"mtime":1612291196188,"results":"3","hashOfConfig":"4"},{"size":2835,"mtime":1612291524055,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"t3qtg1",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kimblanck/kb-dev/reddit_clone/reddit_clone_frontend/src/App.js",["10","11"],"/Users/kimblanck/kb-dev/reddit_clone/reddit_clone_frontend/src/components/MainFeed.js",["12","13"],{"ruleId":"14","severity":1,"message":"15","line":2,"column":8,"nodeType":"16","messageId":"17","endLine":2,"endColumn":12},{"ruleId":"18","severity":1,"message":"19","line":283,"column":13,"nodeType":"20","endLine":283,"endColumn":105},{"ruleId":"18","severity":1,"message":"19","line":29,"column":23,"nodeType":"20","endLine":29,"endColumn":69},{"ruleId":"18","severity":1,"message":"19","line":40,"column":25,"nodeType":"20","endLine":40,"endColumn":71},"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]
>>>>>>> 04e1d8709f0179038cb47a69a8f5c7f337bc4b51
